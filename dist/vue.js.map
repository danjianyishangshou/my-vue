{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组方法\nlet oldArrayProto = Array.prototype//获取原来的方法\nexport let newArrayProto = Object.create(oldArrayProto)//创建新的方法对象，复制原来的方法\nlet methods = [//找到直接作用的原数组的方法\n    'push',\n    'pop',\n    'unshift',\n    'shift',\n    'splice',\n    'reverse',\n    'sort'\n]\nmethods.forEach(method => {\n    // 注意调用的this指向调用方法的目标对象，而不是新建的数组对象 注意不要使用箭头函数\n    newArrayProto[method] = function (...args) {\n        const result = oldArrayProto[method].call(this, ...args)//这里重写了数组的方法，当时内部还是使用的原来的属性方法 函数的劫持 切片编程\n        // 需要对新增的数据再次进行劫持\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice':\n                inArray = args.slice(2)\n            default:\n                break;\n        }\n        if (inserted.length) {\n            // 获取调用者身上的实例方法暂存在_ob属性上\n            ob.observeArray(inserted)\n        }\n        // 数组变化了通知watcher更新视图\n        ob.dep.notify()\n        return result\n    }\n})\n","let id = 0\n// 每个属性都在存在一个dep 用来记录依赖关联的watcher观察者  每天有渲染的属性不会收集依赖\nclass Dep {\n    constructor() {\n        this.id = id++//属性的dep要收集watcher\n        this.subs = []// 这里存放着当前属性对应的watcher有哪些\n    }\n    // 暴露dep给watcher监听绑定\n    static target = null//静态属性 全局\n    // 通知watcher来收集dep实例\n    depend() {\n        // 当调用get的时候 watcher就到赋值给了静态属性 将存在的静态方法拿到\n        // this.subs.push(Dep.target)// 不需要重复的watcher\n        // 让watcher记住dep 把dep传给watcher   Dep.target现在是watcher实例 \n        // 使watcher记录dep \n        Dep.target.addDep(this)\n    }\n    // 被watcher通知后来收集watcher\n    addSub(watcher) {\n        // dep里面收集watcher\n        this.subs.push(watcher)\n    }\n    // 根据收集的依赖进行更新 数据更新 在数据劫持的set中调用 set发生变化调用该方法\n    notify() {\n        // 调用里面的watcher来更新 如果没有收集的不会更新视图\n        this.subs.forEach(watcher => {\n            watcher.update()\n        })// 告诉依赖的watcher更新视图\n    }\n}\n// 维护一个操作watcher的栈\nlet stack = []\nexport function pushTarget(watcher) {\n    stack.push(watcher)\n    Dep.target = watcher\n}\n\nexport function popTarget() {\n    stack.pop()\n    Dep.target = stack[stack.length - 1]\n}\n\n// 另一种定义方式\n// Dep.target = null\nexport default Dep\n\n// 每一个属性都有一个Dep实例 （被观察者），watcher就是观察者 （属性变化了会通知观察者去更新）==》观察者模式","import { newArrayProto } from \"./array\"\nimport Dep from './dep'\n//观察者\nclass Observer {\n    constructor(data) {//data可能是数组/对象\n        this.dep = new Dep() // 给每一个属性都增加一个dep 解决新增属性时候与数组发生变化的时候更新\n\n        // defineProperty这只能劫持已经存在的属性 （vue中单独处理的$set $delete）\n        // 直接给每一个data添加__ob__属性同时也会给对象添加会在 this.walk中被读取所以需要设置不可枚举\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false//将Observer构造实例挂载到data中去 用于操作数组类型的数据劫持\n        })\n        // data.__ob__ = this//将Observer构造实例挂载到data中去 用于操作数组类型的数据劫持\n        if (Array.isArray(data)) {\n            // 如果是数组 \n            // 需要重写push等方法 需要保留数组原有的方法 同时需要重写部分方法\n            data.__proto__ = newArrayProto//此时 newArrayProto的调用者身上附有该Observer实例的_ob属性,这里同时也给劫持过的数组数据中加上_ob属性\n            this.observeArray(data)//数组中放置的是对象或者数组也会被递归劫持 \n        } else {\n            this.walk(data)\n        }\n    }\n    // 循环对象依次劫持\n    walk(data) {\n        // ”重新定义“属性 vue的性能瓶颈  性能差\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n    }\n    //对数组中的每一项进行劫持\n    observeArray(data) {\n        data.forEach(item => observe(item))\n    }\n}\n/**\n * 不要深层次嵌套,递归影响性能,不存在的属性监控不到 存在的属性要重写方法  vue3中使用proxy 就解决这个问题\n * @param {array} value \n */\nfunction dependArray(value) {\n    for (let i = 0; i < value.length; i++) {\n        // 让每一项数组都进行依赖收集\n        let current = value[i]\n        current.__ob__ && current.__ob__.dep.depend()\n        if (Array.isArray(current)) {\n            dependArray(current)\n        }\n    }\n}\nexport function defineReactive(target, key, value) {//闭包\n    // 判断value是否是对象，如果是则进行递归处理\n    let childOb = observe(value)//递归处理   childOb上面就包含一个dep 用来收集属性依赖的\n    // 每次劫持属性时都增加一个唯一的dep\n    let dep = new Dep()//dep造成一个新的对象 dep\n    Object.defineProperty(target, key, {\n        get() {//取值的时候 会执行get 在watcher中调用getter取值操作会进入\n            // 没有渲染的属性将不会被收集\n            if (Dep.target) {//代表当前的watcher依赖的该属性\n                dep.depend()//让这个属性的收集器记住当前的watcher\n                if (childOb) {\n                    // 让数组与对象本身也实现依赖收集\n                    childOb.dep.depend()\n                    // 如果数组中的元素仍然是数组 递归处理\n                    if (Array.isArray(value)) {\n                        dependArray(value)\n                    }\n                }\n            }\n            return value\n        },\n        set(newValue) {\n            if (newValue === value) return\n            // 对改变的数据进行代理\n            observe(newValue)\n            value = newValue\n            dep.notify()//通知dep更新\n        }\n    })\n}\n// 响应式\nexport function observe(data) {\n    // 对这个对象进行劫持\n    if (typeof data !== 'object' || data == null) {\n        return\n    }\n    // 如果数组数据被劫持过了就返回\n    if (data.__ob__ instanceof Observer) {\n        return data.__ob__\n    }\n    // 如果一个对象被劫持过了，就不需要载次劫持（要判读是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\n    return new Observer(data)\n}\n","import Dep, { pushTarget, popTarget } from './dep'\n// 观察者\nlet id = 0// 为了实现组件化开发，进行标识后 实现局部更新\n\n// 1）当我们创建渲染watcher的时候我们会把当前的渲染watcher放在Dep.target上\n// 2）调用_render() 会取值 走到数据劫持中的get中\nclass Watcher {//不同组件有不同的watcher \n    constructor(vm, exprOrFn, options, cb) {\n        this.id = id++\n        this.renderWatcher = options//渲染watcher\n        if (typeof exprOrFn === 'string') {\n            exprOrFn = function () {\n                return vm[exprOrFn]//就是侦听的对象\n            }\n        }\n        this.getter = exprOrFn//getter 调用后就会发生取值渲染操作\n        this.cb = cb//watch方法代执行的回调\n        this.deps = []//后续实现组件卸载 清理工作 实现计算属性\n        this.depsId = new Set()\n        // 计算属性用来控制fn的执行\n        this.lazy = options ? options?.lazy : undefined\n        // 用来存储计算属性的缓存值\n        this.dirty = this.lazy\n        this.oldVal = this.lazy ? undefined : this.get()//初次默认调用，被计算属性控制的属性受控制调用\n        // this.value = undefined\n        this.vm = vm\n        // 判断是不是用户自己定义的watcher 侦听器\n        this.user = options ? options.user : undefined\n    }\n    // 处理计算属性\n    evaluate() {\n        this.value = this.get()//回去到用户函数的返回值 并且标志为脏\n        this.dirty = false\n    }\n    get() {\n        // 处理单一的watcher\n        // Dep.target = this//把当前的watcher交给dep。target全局唯一的静态属性\n        // 处理多个watcher 「渲染wtr与计算属性wtr，」\n        pushTarget(this)\n        let value = this.getter.call(this.vm)//会去vm上取值 [vm._update(vm._render)]\n        // Dep.target = null//dep收集依赖完成 将标识移除\n        // 移除调用过的栈中的watcher\n        popTarget()\n        return value;\n    }\n\n    addDep(dep) {//一个组件对应多个属性 重复的属性也不用记录\n        let id = dep.id\n        // 去重后记录dep\n        if (!this.depsId.has(id)) {\n            this.deps.push(dep)\n            this.depsId.add(id)\n            // 让那个dep记录watcher 由于重复的属性不会进入同一个watcher 所以交给dep也是去重后的watcher\n            dep.addSub(this)\n        }\n    }\n    // 计算属性watcher记录其他watcher 依赖 来执行渲染watcher\n    depend() {\n        let i = this.deps.length\n        while (i--) this.deps[i].depend()// 让计算属性watcher也收集其他watcher\n    }\n    // 更新视图\n    update() {\n        // 使用咱脏值来控制计算属性更新\n        if (this.lazy) {\n            this.dirty = true\n        } else {\n            // 异步优化更新视图的方法 \n            queueWatcher(this)//b把当前的watcher暂存起来\n        }\n    }\n    run() {\n        // 可以拿到新值\n        let newVal = this.get()\n        if (this.user) {\n            console.log(newVal, this.oldVal);\n            this.cb.call(this.vm, newVal, this.oldVal)\n        }\n    }\n}\n// 刷新更新任务队列要实现异步更新的操作\nlet queue = []//watcher队列\nlet has = {}//去重watcher\nlet pending = false//防抖\n/**\n *  刷新调度队列方法\n */\nfunction flushSchedulerQueue() {\n    // 拷贝queue\n    let flushQueue = queue.slice(0)\n    queue = []\n    has = {}\n    pending = false\n    for (let i = 0; i < flushQueue.length; i++) {\n        flushQueue[i].run()// 在刷新的过程中还有新的watcher 放到queue中\n    }\n}\n/**\n * 调度water列队列的water执行更新操作 实现异步更新只触发run函数一次\n * @param {*} watcher \n */\nfunction queueWatcher(watcher) {\n    const id = watcher.id\n    if (!has[id]) {\n        queue.push(watcher)\n        has[id] = true\n        // 不管update执行多少次 但是最终只执行一轮刷新 防抖执行\n        if (!pending) {\n            // 将带渲染的函数放到下一次宏任务中执行\n            nextTick(flushSchedulerQueue)\n            pending = true\n        }\n    }\n}\n// 用来实现nextTick 都是放在了对列中 遍历队列实现异步一次性全部更新 \nlet callbacks = []\nlet waiting = false\nfunction flushCallbacks() {\n    let cbs = callbacks.slice(0)\n    waiting = false\n    callbacks = []\n    cbs.forEach(cb => cb())\n}\n// vue中nextTick 没有直接使用某一个api 而是采用优雅的降级的方式\n// 既有同步又有异步 放到对列中是行为是同步 更新调用flushCallback函数的时候是异步\n// 内部先采用的是promise（ie不兼容） ，不兼容promise采用MutationObserver（h5的api），如果还不兼容 采用ie的专用方案 setImmediate\n// 都不支持，最后是setTimeout\n/**\n * 优雅降级 nextTick实现异步的策略\n * @param {*} flushCallbacks \n */\nfunction timeFunc(flushCallbacks) {\n    if (Promise) {\n        Promise.resolve().then(flushCallbacks)\n    } else if (MutationObserver) {\n        let observer = new MutationObserver(flushCallbacks)\n        let textNode = document.createTextNode(1)\n        observer.observe(textNode, { characterData: true })\n        textNode.textContent = 2//文本变化重新执行\n    } else if (setImmediate) {\n        setImmediate(flushCallbacks)\n    } else {\n        setTimeout(flushCallbacks)\n    }\n}\n/**\n * 暴露出去nextTick的函数 用户更新调度run函数 也可以暴露出去共用户使用 挂载到了原型$nextTick\n * @param {*} cb \n */\nexport function nextTick(cb) {// 先内部还是先外部取决于数据的变化\n    callbacks.push(cb)\n    if (!waiting) {\n        timeFunc(flushCallbacks)\n        // vue3中  不考虑ie， Promise.resolve().then(flushCallbacks)\n        waiting = true\n    }\n}\n\n// dep和watcher是双向记录关系\n// 需要给每一个属性「数据」增加一个dep，目的就是为了收集watcher\n// 一个组件中 有多个属性（n个属性对应一个组件） n个dep对应一个watcher\n// 一个属性对应着多个组件 1个dep对应多个watcher\n//  多对多的关系\nexport default Watcher","import { observe } from './observe/index'\nimport Watcher from './observe/watcher';\nimport Dep from './observe/dep'\n// 项目初始化\nexport function initState(vm) {\n    // 获取所有的选项\n    const opts = vm.$options;\n    if (opts.data) initData(vm)\n    if (opts.computed) initComputed(vm)\n    if (opts.watch) initWatch(vm)\n}\n// 代理处理vm._data.name的问题 直接使用vm.name \n// 这里代理了两次\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[target][key]\n        },\n        set(newVal) {\n            vm[target][key] = newVal\n        }\n    })\n}\n/**\n * 初始化状态数据\n * @param {*} vm \n */\nfunction initData(vm) {\n    // 用户定义data 可能是函数/对象 [在vue3中全是函数]\n    let data = vm.$options.data\n    data = typeof data === 'function' ? data.call(vm) : data//data是用户的属性\n    // 劫持数据，做响应式vue2使用Object.defineProperty\n    // vue中定义了监视器模块\n    vm._data = data//把返回的数据挂载到vm中\n    observe(data)//同时监听数据的变化vm层\n    // 将vm_data 用vm代理\n    for (const key in data) {\n        proxy(vm, '_data', key)\n    }\n}\n/**\n * 初始化计算属性\n */\nfunction initComputed(vm) {\n    const computed = vm.$options.computed\n    const watchers = vm._computedWatchers = {}//保存Watcher对象 并将计算属性的watcher放在vm身上\n    for (const key in computed) {\n        const userDef = computed[key]\n        // 监控计算属性中的get的变化\n        // computed有两种写法\n        const fn = typeof userDef === 'function' ? userDef : userDef.get\n        // 如果直接new Watcher就会立刻执行fn 加个配置项不让直接执行\n        watchers[key] = new Watcher(vm, fn, { lazy: true })\n        // const setter = userDef.set || (() => { })\n        defineComputed(vm, key, userDef)\n    }\n}\n/**\n * 劫持计算属性\n * @param {*} target \n * @param {*} key \n * @param {*} userDef \n */\nfunction defineComputed(target, key, userDef) {\n    // const getter = typeof userDef === 'function' ? userDef : userDef.get\n    const setter = userDef.set || (() => { })\n    // 劫持每一个computedWatcher\n    Object.defineProperty(target, key, {\n        get: createComputedGetter(key),\n        set: setter\n    })\n}\n/**\n * 创建计算属性getter\n * 计算属性本身根本不会收集依赖 只会让自己的依赖属性去收集依赖\n */\nfunction createComputedGetter(key) {\n    // 监测是否执行getter\n    return function () {\n        // this指向vm\n        const watcher = this._computedWatchers[key]\n        // 如果存在dirty属性\n        if (watcher.dirty) {\n            // 如果是存在计算给的结果 （如果是脏的）就执行用户传入的函数\n            watcher.evaluate()//求值后watcher中的dirty就为脏 不会再次进入\n        }\n        if (Dep.target) {//计算属性出栈后 还好执行渲染watcher应该让watcher里面的属性 也好去收集上一层的watcher\n            watcher.depend()//调用渲染逻辑\n        }\n        return watcher.value\n    }\n}\n/**\n * 创建初始化watch对象 需要侦听的目标全部创建watcher\n */\nfunction initWatch(vm) {\n    let watch = vm.$options.watch;\n    for (const key in watch) {\n        // 字符串，函数，数组三种情况\n        const hander = watch[key];\n        if (Array.isArray(hander)) {\n            for (let i = 0; i < hander.length; i++) {\n                createWatcher(vm, key, hander[i])\n            }\n        } else {\n            createWatcher(vm, key, hander)\n        }\n    }\n}\n/**\n * 创建侦听Watcher\n * @param {*} vm 实例\n * @param {string,function ,object} exprOrFn  侦听的对象 :\n * @param {function } hander 执行的函数\n * @returns \n */\nfunction createWatcher(vm, exprOrFn, hander) {\n    // hander 三种情况 函数，字符串，对像\n    if (typeof hander === 'string') {\n        hander = vm[hander]\n    }\n    // 执行vm.$watch方法\n    return vm.$watch(exprOrFn, hander)\n}","//! 利用栈结构来处理成树结构\n//.vue2正则匹配标签\n//. vue3中采用的而不是正则\n// const ncname = `[a-zA-z_][\\\\-\\\\.0-9_a-zA-Z]*`\n// const qnameCapture = `((?:${ncname}\\\\:)?${ncname})?`\n// const startTagOpen = new RegExp(`^<${qnameCapture}`)//匹配到的开始标签名\n// const endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)//匹配结束标签的名字\n// const attribute = /^\\s*([^\\s\"'<>/=]+)\\s*(?:=\\s*)?(?:\"([^\"]*)\"|'([^']*)'|([^\"'<>\\s`]+))?/; //匹配属性 第一个分组是属性的key  value就是3/4/5分组\n// const startTagClose = /^\\s*(\\/?)>/;//标签结束闭合 可以 />或者 >\n// const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;//匹配胡子语法\n\n// 标签名 a-aaa\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\n// 命名空间标签 aa:aa-xxx\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n// 开始标签-捕获标签名\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\n// 结束标签-匹配标签结尾的 </div>\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\n// 匹配属性\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// 匹配标签结束的 >\nconst startTagClose = /^\\s*(\\/?)>/;\n// 匹配 {{ }} 表达式\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n/**\n * html解析生成树结构\n * @param {html结构} html \n * @returns \n */\nexport function parseHTML(html) {\n    html = html.trim()\n    const ELEMENT_TYPE = 1\n    const TEXT_TYPE = 3\n    const stack = []//创建一个栈\n    let currentParent;//指针指向栈中最后一项\n    let root\n    // 转化成一颗抽象语法树\n    function createASTElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n    function createASTText(text, parent) {\n        return {\n            type: TEXT_TYPE,\n            text,\n            parent\n        }\n    }\n    function startLabel(tag, attrs) {\n        let node = createASTElement(tag, attrs)\n        if (!root) {\n            root = node\n        }\n        if (currentParent) {\n            node.parent = currentParent\n            currentParent.children.push(node)\n        }\n        stack.push(node)//加入栈中\n        currentParent = node// 指针指向栈中最后一个\n    }\n    function chars(text) {\n        text = text.replace(/\\s/g, '')\n        text && currentParent.children.push(createASTText(text, currentParent))\n    }\n    function endLabel(tag) {\n        let node = stack.pop()//检验标签是否合法\n        currentParent = stack[stack.length - 1]//指针向前移动一位\n    }\n    function advance(n) {\n        html = html.substring(n)\n    }\n    function parseStartTag() {\n        const start = html.match(startTagOpen)\n        if (start) {\n            const match = {\n                tagName: start[1],//标签名称\n                attrs: [],\n            }\n            //前进删除\n            advance(start[0].length)\n            // 如果不是开始标签的结束 就一直匹配下去\n            let attr, end;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length)\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n            }\n            if (end) {\n                advance(end[0].length)\n            }\n            return match\n        }\n        return false\n    }\n    while (html) {\n        // debugger\n        // 如果textEnd为0就是开始标签\n        // 大于0 就是文本结束的位置\n        let textEnd = html.indexOf('<');//如果索引是0，就说明是个标签 \n        if (textEnd == 0) {\n            const startTagMatch = parseStartTag()//开始匹配的结果\n            if (startTagMatch) {//解析到开始的标签\n                startLabel(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            let endTagMatch = html.match(endTag)\n            if (endTagMatch) {//匹配结束标签\n                advance(endTagMatch[0].length)\n                endLabel(endTagMatch)\n                continue\n            }\n        }\n        if (textEnd > 0) {\n            let text = html.substring(0, textEnd)//文本内容\n            if (text) {\n                chars(text)\n                advance(text.length)//解析到的文本\n            }\n        }\n        if (textEnd == -1) {\n            break\n        }\n    }\n    return root\n}","import { parseHTML, defaultTagRE } from './parse'\n/**\n * 处理属性\n * @param {*} attrs \n * @returns \n */\nfunction genProps(attrs) {\n    let str = ''\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            // 需要将color：red处理成{color:'red'}\n            let obj = {}\n            attr.value.split(';').forEach(e => {\n                let [key, value] = e.split(':')\n                obj[key] = value\n            })\n            //解析成对象形式后赋值\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n/**\n * 处理子节节点逻辑\n * @param {*} node \n * @returns \n */\nfunction gen(node) {\n    // 后代非文本节点\n    if (node.type === 1) {\n        return codegen(node)\n    } else {\n        // 文本节点\n        // 创建文本节点 填充文本 文本存在纯文本 与da\n        let text = node.text\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        } else {\n            //数据层面\n            //_v( _s(name)+'hello'+_s(age))\n            let tokens = []// 储存节点内容\n            let match;\n            defaultTagRE.lastIndex = 0//重置正则全局匹配后的位置问题\n            let lastIndex = 0//记录正则匹配位置\n            while ((match = defaultTagRE.exec(text))) {\n                let index = match.index//正则匹配位置\n                if (index > lastIndex) tokens.push(JSON.stringify(text.slice(lastIndex, index)))//将匹配到的文本存储到数组中\n                tokens.push(`_s(${match[1].trim()})`)\n                lastIndex = index + match[0].length//更新匹配位置\n            }\n            // 最后依然饱含内容\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)))//将剩余内容存储到数组中\n            }\n            return `_v(${tokens.join('+')})`\n        }\n    }\n}\n/**\n * 处理子代\n * @param {*} ast \n */\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',')\n}\n/**\n * 解析成文本格式\n * @param {*} ast \n * @returns 主要解析成  \n *  _c 就是render函数\n *  _v处理文本节点   \n *  _s处理data数据\n */\nfunction codegen(ast) {\n    let children = genChildren(ast.children)\n    let code = ` _c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'},${ast.children.length ? `${children}` : ``})`\n    return code\n}\n/**\n * 对模版进行编译\n * @param {template模版} el \n */\nexport function compileToFunction(template) {\n    // 1. 就是将template转化为ast语法树\n    let ast = parseHTML(template)\n    // 2. 生成render方法 render方法执行后的结果就是 虚拟DOM\n    // 模版引擎的实现原理就是 with+ new Function\n    let code = codegen(ast)\n    code = `with(this){return ${code}}`\n    let render = new Function(code)//根据代码生成函数\n    return render\n}","// 构建虚拟节点的方法\n// h(),_c()\nexport function createElementVNode(vm, tag, data, ...children) {\n    if (data == null) {\n        data = {}\n    }\n    let key = data.key\n    if (key) {\n        delete data.key\n    }\n    return vnode({ vm, tag, key, data, children })\n}\n\n//_v()\nexport function createTextVNode(vm, text) {\n    return vnode({ vm, text })\n}\n/**\n * 虚拟DOM是描述dom元素,可以增加一些自定义属性\n * ast 做的事语法层面的转化 它描述的是语法本身 可以描述js css html等\n */\nfunction vnode({ vm, tag, key, data, children, text }) {\n    return {\n        vm, tag, key, data, children, text\n        // 插槽 指令等\n    }\n} ","import { createElementVNode, createTextVNode } from './vdom'\nimport Watcher from './observe/watcher'\n/**\n * 创建真实DOM\n * @param {string} vnode \n * @returns \n */\nfunction createElm(vnode) {\n    let { tag, data, key, children, text } = vnode\n    if (key) data.key = key\n    if (typeof tag === 'string') {\n        // 这里将真实节点与虚拟节点对应起来，\n        vnode.el = document.createElement(tag)\n        // 元素赋值属性\n        patchProps(vnode.el, data)\n        if (children) {\n            children.forEach(child => {\n                vnode.el.appendChild(createElm(child))\n            })\n        }\n    } else {\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n/**\n * 更新属性,给对应的节点添加属性\n */\nfunction patchProps(el, props) {\n    for (const key in props) {\n        if (key === 'style') {\n            for (const styleName in props.style) {\n                el.style[styleName] = props.style[styleName]\n            }\n        } else {\n            el.setAttribute(key, props[key])\n        }\n    }\n}\n/**\n * 将获取到的虚拟dom转化成真实dom\n *在vue2/3中 既有初始化功能也有更新功能\n * @param {string} oldVNode 老节点节点\n * @param {string} vnode  新节点\n */\nfunction patch(oldVNode, vnode) {\n    const isRelElement = oldVNode.nodeType//nodeType原生的方法 判断是不是原生节点 \n    /**\n     * nodeType 只读属性\n     * 如果节点是一个元素节点，nodeType 属性返回 1。\n     * 如果节点是属性节点, nodeType 属性返回 2。\n     * 如果节点是一个文本节点，nodeType 属性返回 3。\n     * 如果节点是一个注释节点，nodeType 属性返回 8。\n     * 整个文档（DOM树的根节点） nodeType 属性返回  9\n      */\n    if (isRelElement) {\n        // 真实元素\n        // 拿到真实元素的父级元素，生成新的dom 替换原来老的元素（删除老的元素，追加新的元素）\n        const elm = oldVNode\n        const parentElm = elm.parentNode\n        //创建dom\n        const newElm = createElm(vnode)\n        // 想插入新的节点到老的后面 再删除老的\n        parentElm.insertBefore(newElm, elm.nextSibling)//nextSibling是指的目标节点的后续节点\n        parentElm.removeChild(elm)\n        return newElm\n    } else {\n        // diff算法\n    }\n}\nexport function initLifeCycle(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this\n        const el = vm.$el\n        // 将获取到的虚拟dom转化成真实dom\n        // 在vue2/3中 既有初始化功能也有更新功能\n        vm.$el = patch(el, vnode)\n    }\n    // _c('div',{},...children)\n    Vue.prototype._c = function () {\n        return createElementVNode(this, ...arguments)\n    }\n    // _v(text)\n    Vue.prototype._v = function () {\n        return createTextVNode(this, ...arguments)\n    }\n    Vue.prototype._s = function (value) {\n        if (typeof value !== 'object') return value\n        return JSON.stringify(value)\n    }\n    Vue.prototype._render = function () {\n        // 让with中的this指向vm\n        return this.$options.render.call(this)//通过ast语法转译后生成的render方法\n    }\n}\nexport function mountComponent(vm, el) {//这里的el是通过querySelector处理过的\n    vm.$el = el\n    // 1,  调用render函数 产生虚拟节点 虚拟DOM\n    //vm._render()//vm.$options.render() 返回的虚拟节点\n    // 2，根据虚拟DOM生成真实的DOM\n    // 包裹在watcher者实例中，进行模块开发\n    // vm._update(vm._render())\n    const updateComponent = () => {\n        vm._update(vm._render())\n    }\n    new Watcher(vm, updateComponent)\n    // 3，插入到el元素中\n}\n\n/**\n * vue核心流程\n * 1，创造了响应式\n * 2，模版转成了ast语法树\n * 3，将ast树转化成了render函数\n * 4，后续每次数据更新不再需要重新生成解析ast树 而是只执行render函数\n *      render 函数会产生虚拟节点（使用响应式数据）根据虚拟节点生成真正的DOM节点\n */","import { initState } from \"./state\"\nimport { compileToFunction } from './compiler'\nimport { mountComponent } from './lifecycle'\nexport function initMixin(Vue) {//给vue实例添加一些方法或函数 -- 可以在实例的时候直接操作对象\n    /**\n     * 初始化实例 给实例添加用户配置等\n     * @param {实例中的属性和方法} options \n     */\n    Vue.prototype._init = function (options) {\n        // 当使用vue的时候 传递方法 入$nextTick() 等等\n        const vm = this\n        vm.$options = options//将用户的选项传递给实例\n        // 初始化状态\n        initState(vm)\n        // 解析template函数\n        if (options.el) {\n            // 用户传入了模版\n            vm.$mount(options.el)//实现数据的挂载\n        }\n    }\n    /**\n     * 解析模版\n     * @param {根节点} el \n     */\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        el = document.querySelector(el)\n        // 判断用户有没有写render函数 与模版\n        //. 所以渲染顺序是先看有没有render函数 然后到template 最后到页面中自行查找\n        let ops = vm.$options\n        if (!ops.render) {\n            let template;//查看有没有写template和模版 没有下颚采用外部\n            // 没有写模版 但是写了el\n            if (!ops.template && el) {//不存在template模版 直接获取\n                // 这种具有兼容性问题 \n                template = el.outerHTML\n            } else {\n                if (el) {//存在el模版 采取节点下的模版\n                    template = ops.template\n                }\n            }\n            // 写了template 就使用写的模版\n            if (template && el) {\n                // 这里需要对模版进行编译\n                const render = compileToFunction(template)\n                ops.render = render//给实例添加render函数 jsx会被编译成h函数\n            }\n        }\n        // 有render直接取render，没有就使用上层逻辑实行后的render\n        // console.log(ops.render);\n        mountComponent(vm, el)//.组件的挂载\n        //全量的 script标签引用的vue.global.js这个编译过程是在览器运行的\n        //runtime「运行时」是不包含模板编译的，整个编译是打包的时候通过loader来转义.vue文件的,在运行时中不能使用template\n    }\n}\n","import { initMixin } from './init'\nimport { initLifeCycle } from './lifecycle'\nimport Watcher, { nextTick } from './observe/watcher'\n// 将所有的方法都耦合在一起\n/**\n * 创建vue构造函数\n * @param {用户的选项} options \n */\nfunction Vue(options) {\n    // 默认调用init\n    this._init(options)\n}\nVue.prototype.$nextTick = nextTick\ninitMixin(Vue)//扩展了init方法 解析模版生成AST树  生成响应式\ninitLifeCycle(Vue)//在data、el、...、methods中扩展扩展是虚拟DOM生成真实DOM\n\n/**\n * watch函数 所有的写法最终都会走向\n * @param {*} exprOrFn \n * @param {*} cb \n * @param {*} options \n */\nVue.prototype.$watch = function (exprOrFn, cb, options = {}) {\n    console.log(exprOrFn, cb, options);\n    // 创建侦听watcher\n    // 侦听的对象变化了 直接调用cb\n    new Watcher(this, exprOrFn, { user: true }, cb)\n}\n\nexport default Vue;"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","inArray","slice","observeArray","dep","notify","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSub","watcher","push","update","_defineProperty","stack","pushTarget","popTarget","pop","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","i","current","childOb","get","set","newValue","_typeof","Watcher","vm","exprOrFn","options","cb","renderWatcher","getter","deps","depsId","Set","lazy","undefined","dirty","oldVal","user","evaluate","has","add","queueWatcher","run","newVal","console","log","queue","pending","flushSchedulerQueue","flushQueue","nextTick","callbacks","waiting","flushCallbacks","cbs","timeFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","hander","createWatcher","$watch","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parseHTML","html","trim","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","createASTElement","tag","attrs","type","children","parent","createASTText","text","startLabel","node","chars","replace","endLabel","advance","n","substring","parseStartTag","start","match","tagName","attr","end","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","obj","split","e","_e$split","_e$split2","_slicedToArray","JSON","stringify","gen","codegen","test","tokens","lastIndex","exec","index","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","vnode","createTextVNode","_ref","createElm","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRelElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","_update","$el","_c","_v","_s","_render","mountComponent","updateComponent","initMixin","_init","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}